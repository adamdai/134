;; Auto-generated. Do not edit!


(when (boundp 'hebiros::TrajectoryGoal)
  (if (not (find-package "HEBIROS"))
    (make-package "HEBIROS"))
  (shadow 'TrajectoryGoal (find-package "HEBIROS")))
(unless (find-package "HEBIROS::TRAJECTORYGOAL")
  (make-package "HEBIROS::TRAJECTORYGOAL"))

(in-package "ROS")
;;//! \htmlinclude TrajectoryGoal.msg.html


(defclass hebiros::TrajectoryGoal
  :super ros::object
  :slots (_waypoints _times ))

(defmethod hebiros::TrajectoryGoal
  (:init
   (&key
    ((:waypoints __waypoints) (let (r) (dotimes (i 0) (push (instance hebiros::WaypointMsg :init) r)) r))
    ((:times __times) (make-array 0 :initial-element 0.0 :element-type :float))
    )
   (send-super :init)
   (setq _waypoints __waypoints)
   (setq _times __times)
   self)
  (:waypoints
   (&rest __waypoints)
   (if (keywordp (car __waypoints))
       (send* _waypoints __waypoints)
     (progn
       (if __waypoints (setq _waypoints (car __waypoints)))
       _waypoints)))
  (:times
   (&optional __times)
   (if __times (setq _times __times)) _times)
  (:serialization-length
   ()
   (+
    ;; hebiros/WaypointMsg[] _waypoints
    (apply #'+ (send-all _waypoints :serialization-length)) 4
    ;; float64[] _times
    (* 8    (length _times)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; hebiros/WaypointMsg[] _waypoints
     (write-long (length _waypoints) s)
     (dolist (elem _waypoints)
       (send elem :serialize s)
       )
     ;; float64[] _times
     (write-long (length _times) s)
     (dotimes (i (length _times))
       (sys::poke (elt _times i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; hebiros/WaypointMsg[] _waypoints
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _waypoints (let (r) (dotimes (i n) (push (instance hebiros::WaypointMsg :init) r)) r))
     (dolist (elem- _waypoints)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; float64[] _times
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _times (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _times i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;;
   self)
  )

(setf (get hebiros::TrajectoryGoal :md5sum-) "a1c1309b41ac763fe07635c6823f1cb7")
(setf (get hebiros::TrajectoryGoal :datatype-) "hebiros/TrajectoryGoal")
(setf (get hebiros::TrajectoryGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
hebiros/WaypointMsg[] waypoints
float64[] times

================================================================================
MSG: hebiros/WaypointMsg
string[] names
float64[] positions
float64[] velocities
float64[] accelerations

")



(provide :hebiros/TrajectoryGoal "a1c1309b41ac763fe07635c6823f1cb7")


