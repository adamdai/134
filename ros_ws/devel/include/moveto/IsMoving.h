// Generated by gencpp from file moveto/IsMoving.msg
// DO NOT EDIT!


#ifndef MOVETO_MESSAGE_ISMOVING_H
#define MOVETO_MESSAGE_ISMOVING_H

#include <ros/service_traits.h>


#include <moveto/IsMovingRequest.h>
#include <moveto/IsMovingResponse.h>


namespace moveto
{

struct IsMoving
{

typedef IsMovingRequest Request;
typedef IsMovingResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct IsMoving
} // namespace moveto


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::moveto::IsMoving > {
  static const char* value()
  {
    return "9104f1a32b4fbf4d3c8c80d9b9493250";
  }

  static const char* value(const ::moveto::IsMoving&) { return value(); }
};

template<>
struct DataType< ::moveto::IsMoving > {
  static const char* value()
  {
    return "moveto/IsMoving";
  }

  static const char* value(const ::moveto::IsMoving&) { return value(); }
};


// service_traits::MD5Sum< ::moveto::IsMovingRequest> should match 
// service_traits::MD5Sum< ::moveto::IsMoving > 
template<>
struct MD5Sum< ::moveto::IsMovingRequest>
{
  static const char* value()
  {
    return MD5Sum< ::moveto::IsMoving >::value();
  }
  static const char* value(const ::moveto::IsMovingRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::moveto::IsMovingRequest> should match 
// service_traits::DataType< ::moveto::IsMoving > 
template<>
struct DataType< ::moveto::IsMovingRequest>
{
  static const char* value()
  {
    return DataType< ::moveto::IsMoving >::value();
  }
  static const char* value(const ::moveto::IsMovingRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::moveto::IsMovingResponse> should match 
// service_traits::MD5Sum< ::moveto::IsMoving > 
template<>
struct MD5Sum< ::moveto::IsMovingResponse>
{
  static const char* value()
  {
    return MD5Sum< ::moveto::IsMoving >::value();
  }
  static const char* value(const ::moveto::IsMovingResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::moveto::IsMovingResponse> should match 
// service_traits::DataType< ::moveto::IsMoving > 
template<>
struct DataType< ::moveto::IsMovingResponse>
{
  static const char* value()
  {
    return DataType< ::moveto::IsMoving >::value();
  }
  static const char* value(const ::moveto::IsMovingResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MOVETO_MESSAGE_ISMOVING_H
